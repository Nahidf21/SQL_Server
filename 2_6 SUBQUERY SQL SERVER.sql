
CREATE TABLE ACCOUNT_CONTACTS
(	CONTACT_ID INT NOT NULL,
	CONTACT_NAME VARCHAR(15) NOT NULL,
	LAST_CONTACTED DATE,
	ACCOUNT_ID INT NOT NULL,
	CONSTRAINT PK_ACCOUNT_CONTACT_ID PRIMARY KEY (ACCOUNT_ID)
)

INSERT INTO ACCOUNT_CONTACTS (CONTACT_ID,CONTACT_NAME,LAST_CONTACTED,ACCOUNT_ID)
	VALUES (1,'JANE DOE','2020-11-23',101),
	       (2,'SARAH LEWIS','2020-09-25',102),
	       (3,'JAMES VERCOE','2019-05-26',103);

CREATE TABLE ORDERS
(	ORDER_ID INT NOT NULL,
	ACCOUNT_ID INT NOT NULL,
	ORDER_DATE DATE NOT NULL,
	CONSTRAINT PK_ORDERS_ORDERID PRIMARY KEY (ORDER_ID),
	CONSTRAINT FK_ORDERS_ACCOUNTID FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT_CONTACTS(ACCOUNT_ID)
);

INSERT INTO ORDERS (ORDER_ID, ACCOUNT_ID, ORDER_DATE)
VALUES (1001,101,'2020-06-30'),
       (1002,101,'2020-12-01'),
       (1003,103,'2019-11-28');


SELECT * FROM ORDERS;
SELECT * FROM ACCOUNT_CONTACTS;

--- TASK - RETURN ACCOUNT CONTACTS FOR CONTACTS WHO HAVE NOT BEEN CONTACTED SINCE 1ST OF JANUARY 2020
---        AND HAVE ASLO HAVE NOT MADE AN ORDERS SINCE 1ST OF JANUARY 2020.



SELECT AC.CONTACT_NAME FROM 
ACCOUNT_CONTACTS AS AC
INNER JOIN 
ORDERS AS O
ON AC.ACCOUNT_ID = O.ACCOUNT_ID
WHERE AC.LAST_CONTACTED < '2020-01-01' AND O.ORDER_DATE < '2020-01-01';



WITH CONTACT AS 
(  SELECT CONTACT_NAME , ACCOUNT_ID FROM ACCOUNT_CONTACTS
   WHERE LAST_CONTACTED < '2020-01-01'
) , t AS
( SELECT ACCOUNT_ID FROM ORDERS
WHERE ORDER_DATE < '2020-01-01'
)

SELECT CONTACT_NAME FROM CONTACT C
INNER JOIN T
ON C.ACCOUNT_ID = T.ACCOUNT_ID



--- SUBQUARY CHALLANGES


SELECT * FROM OES.products;

-- SELF CONTAIN SUBQUERY
SELECT	product_id, 
	product_name, 
	list_price, 
	category_id 
		FROM OES.products
			WHERE list_price = (
					 SELECT MIN(list_price) FROM OES.products
					 
					 );

--- CORRELATED SUBQUERY 


SELECT product_id, product_name, list_price, category_id 
	FROM OES.products P1
		WHERE P1.list_price IN (SELECT MIN(P2.list_price) FROM OES.products P2 
					WHERE P1.category_id = P2.category_id);


WITH CTG1 AS (
SELECT category_id, MIN (list_price)  FROM OES.products
 )


--- 